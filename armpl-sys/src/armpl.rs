#![allow(warnings)]

/* automatically generated by rust-bindgen 0.71.1 */

#[derive(PartialEq, Copy, Clone, Hash, Debug, Default)]
#[repr(transparent)]
pub struct __BindgenFloat16(pub u16);
pub type armpl_int_t = i32;
impl CBLAS_LAYOUT {
    pub const CblasRowMajor: CBLAS_LAYOUT = CBLAS_LAYOUT(101);
}
impl CBLAS_LAYOUT {
    pub const CblasColMajor: CBLAS_LAYOUT = CBLAS_LAYOUT(102);
}
#[repr(transparent)]
#[derive(Copy, Clone, Hash, PartialEq, Eq)]
pub struct CBLAS_LAYOUT(pub ::std::os::raw::c_uint);
impl CBLAS_TRANSPOSE {
    pub const CblasNoTrans: CBLAS_TRANSPOSE = CBLAS_TRANSPOSE(111);
}
impl CBLAS_TRANSPOSE {
    pub const CblasTrans: CBLAS_TRANSPOSE = CBLAS_TRANSPOSE(112);
}
impl CBLAS_TRANSPOSE {
    pub const CblasConjTrans: CBLAS_TRANSPOSE = CBLAS_TRANSPOSE(113);
}
#[repr(transparent)]
#[derive(Copy, Clone, Hash, PartialEq, Eq)]
pub struct CBLAS_TRANSPOSE(pub ::std::os::raw::c_uint);
impl CBLAS_UPLO {
    pub const CblasUpper: CBLAS_UPLO = CBLAS_UPLO(121);
}
impl CBLAS_UPLO {
    pub const CblasLower: CBLAS_UPLO = CBLAS_UPLO(122);
}
#[repr(transparent)]
#[derive(Copy, Clone, Hash, PartialEq, Eq)]
pub struct CBLAS_UPLO(pub ::std::os::raw::c_uint);
impl CBLAS_DIAG {
    pub const CblasNonUnit: CBLAS_DIAG = CBLAS_DIAG(131);
}
impl CBLAS_DIAG {
    pub const CblasUnit: CBLAS_DIAG = CBLAS_DIAG(132);
}
#[repr(transparent)]
#[derive(Copy, Clone, Hash, PartialEq, Eq)]
pub struct CBLAS_DIAG(pub ::std::os::raw::c_uint);
impl CBLAS_SIDE {
    pub const CblasLeft: CBLAS_SIDE = CBLAS_SIDE(141);
}
impl CBLAS_SIDE {
    pub const CblasRight: CBLAS_SIDE = CBLAS_SIDE(142);
}
#[repr(transparent)]
#[derive(Copy, Clone, Hash, PartialEq, Eq)]
pub struct CBLAS_SIDE(pub ::std::os::raw::c_uint);
unsafe extern "C" {
    pub fn cblas_caxpby(
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_caxpy(
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ccopy(
        N: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cdotc_sub(
        N: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        dotc: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_cdotu_sub(
        N: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        dotu: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_cgbmv(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        KL: armpl_int_t,
        KU: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemm(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemm3m(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemm_batch(
        layout: CBLAS_LAYOUT,
        transA: *const CBLAS_TRANSPOSE,
        transB: *const CBLAS_TRANSPOSE,
        m: *const armpl_int_t,
        n: *const armpl_int_t,
        k: *const armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const *const ::std::os::raw::c_void,
        lda: *const armpl_int_t,
        B: *const *const ::std::os::raw::c_void,
        ldb: *const armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *const *mut ::std::os::raw::c_void,
        ldc: *const armpl_int_t,
        group_count: armpl_int_t,
        group_size: *const armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemmt(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemv(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cgerbc(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cgerbu(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cgerc(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cgeru(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_chbmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_chemm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_chemv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cher(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f32,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cher2(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cher2k(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: f32,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cherk(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f32,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        beta: f32,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_chpmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        Ap: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_chpr(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f32,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        A: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_chpr2(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        Ap: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_crot(
        N: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
        c: f32,
        s: *const ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_crotg(
        a: *mut ::std::os::raw::c_void,
        b: *mut ::std::os::raw::c_void,
        c: *mut f32,
        s: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_cscal(
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_csrot(
        N: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
        c: f32,
        s: f32,
    );
}
unsafe extern "C" {
    pub fn cblas_csscal(
        N: armpl_int_t,
        alpha: f32,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cswap(
        N: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_csymm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_csyr2k(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_csyrk(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ctbmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        K: armpl_int_t,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ctbsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        K: armpl_int_t,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ctpmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        Ap: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ctpsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        Ap: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrmm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *mut ::std::os::raw::c_void,
        ldb: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrsm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *mut ::std::os::raw::c_void,
        ldb: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_cwaxpby(
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incx: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *const ::std::os::raw::c_void,
        incy: armpl_int_t,
        W: *mut ::std::os::raw::c_void,
        incw: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dasum(N: armpl_int_t, X: *const f64, incX: armpl_int_t) -> f64;
}
unsafe extern "C" {
    pub fn cblas_daxpby(
        N: armpl_int_t,
        alpha: f64,
        X: *const f64,
        incX: armpl_int_t,
        beta: f64,
        Y: *mut f64,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_daxpy(
        N: armpl_int_t,
        alpha: f64,
        X: *const f64,
        incX: armpl_int_t,
        Y: *mut f64,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dcabs1(Z: *const ::std::os::raw::c_void) -> f64;
}
unsafe extern "C" {
    pub fn cblas_dcopy(
        N: armpl_int_t,
        X: *const f64,
        incX: armpl_int_t,
        Y: *mut f64,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ddot(
        N: armpl_int_t,
        X: *const f64,
        incX: armpl_int_t,
        Y: *const f64,
        incY: armpl_int_t,
    ) -> f64;
}
unsafe extern "C" {
    pub fn cblas_dgbmv(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        KL: armpl_int_t,
        KU: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        X: *const f64,
        incX: armpl_int_t,
        beta: f64,
        Y: *mut f64,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dgemm(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        B: *const f64,
        ldb: armpl_int_t,
        beta: f64,
        C: *mut f64,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dgemm_batch(
        layout: CBLAS_LAYOUT,
        transA: *const CBLAS_TRANSPOSE,
        transB: *const CBLAS_TRANSPOSE,
        m: *const armpl_int_t,
        n: *const armpl_int_t,
        k: *const armpl_int_t,
        alpha: *const f64,
        A: *const *const f64,
        lda: *const armpl_int_t,
        B: *const *const f64,
        ldb: *const armpl_int_t,
        beta: *const f64,
        C: *const *mut f64,
        ldc: *const armpl_int_t,
        group_count: armpl_int_t,
        group_size: *const armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dgemmt(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        B: *const f64,
        ldb: armpl_int_t,
        beta: f64,
        C: *mut f64,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dgemv(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        X: *const f64,
        incX: armpl_int_t,
        beta: f64,
        Y: *mut f64,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dger(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f64,
        X: *const f64,
        incX: armpl_int_t,
        Y: *const f64,
        incY: armpl_int_t,
        A: *mut f64,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dgerb(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f64,
        X: *const f64,
        incX: armpl_int_t,
        Y: *const f64,
        incY: armpl_int_t,
        beta: f64,
        A: *mut f64,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dnrm2(N: armpl_int_t, X: *const f64, incX: armpl_int_t) -> f64;
}
unsafe extern "C" {
    pub fn cblas_drot(
        N: armpl_int_t,
        X: *mut f64,
        incX: armpl_int_t,
        Y: *mut f64,
        incY: armpl_int_t,
        c: f64,
        s: f64,
    );
}
unsafe extern "C" {
    pub fn cblas_drotg(a: *mut f64, b: *mut f64, c: *mut f64, s: *mut f64);
}
unsafe extern "C" {
    pub fn cblas_drotm(
        N: armpl_int_t,
        X: *mut f64,
        incX: armpl_int_t,
        Y: *mut f64,
        incY: armpl_int_t,
        P: *const f64,
    );
}
unsafe extern "C" {
    pub fn cblas_drotmg(d1: *mut f64, d2: *mut f64, b1: *mut f64, b2: f64, P: *mut f64);
}
unsafe extern "C" {
    pub fn cblas_dsbmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        X: *const f64,
        incX: armpl_int_t,
        beta: f64,
        Y: *mut f64,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dscal(N: armpl_int_t, alpha: f64, X: *mut f64, incX: armpl_int_t);
}
unsafe extern "C" {
    pub fn cblas_dsdot(
        N: armpl_int_t,
        X: *const f32,
        incX: armpl_int_t,
        Y: *const f32,
        incY: armpl_int_t,
    ) -> f64;
}
unsafe extern "C" {
    pub fn cblas_dspmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f64,
        Ap: *const f64,
        X: *const f64,
        incX: armpl_int_t,
        beta: f64,
        Y: *mut f64,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dspr(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f64,
        X: *const f64,
        incX: armpl_int_t,
        Ap: *mut f64,
    );
}
unsafe extern "C" {
    pub fn cblas_dspr2(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f64,
        X: *const f64,
        incX: armpl_int_t,
        Y: *const f64,
        incY: armpl_int_t,
        A: *mut f64,
    );
}
unsafe extern "C" {
    pub fn cblas_dswap(
        N: armpl_int_t,
        X: *mut f64,
        incX: armpl_int_t,
        Y: *mut f64,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dsymm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        B: *const f64,
        ldb: armpl_int_t,
        beta: f64,
        C: *mut f64,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dsymv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        X: *const f64,
        incX: armpl_int_t,
        beta: f64,
        Y: *mut f64,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyr(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f64,
        X: *const f64,
        incX: armpl_int_t,
        A: *mut f64,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyr2(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f64,
        X: *const f64,
        incX: armpl_int_t,
        Y: *const f64,
        incY: armpl_int_t,
        A: *mut f64,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyr2k(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        B: *const f64,
        ldb: armpl_int_t,
        beta: f64,
        C: *mut f64,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyrk(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        beta: f64,
        C: *mut f64,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dtbmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        K: armpl_int_t,
        A: *const f64,
        lda: armpl_int_t,
        X: *mut f64,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dtbsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        K: armpl_int_t,
        A: *const f64,
        lda: armpl_int_t,
        X: *mut f64,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dtpmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        Ap: *const f64,
        X: *mut f64,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dtpsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        Ap: *const f64,
        X: *mut f64,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrmm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        B: *mut f64,
        ldb: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        A: *const f64,
        lda: armpl_int_t,
        X: *mut f64,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrsm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f64,
        A: *const f64,
        lda: armpl_int_t,
        B: *mut f64,
        ldb: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        A: *const f64,
        lda: armpl_int_t,
        X: *mut f64,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dwaxpby(
        N: armpl_int_t,
        alpha: f64,
        X: *const f64,
        incx: armpl_int_t,
        beta: f64,
        Y: *const f64,
        incy: armpl_int_t,
        W: *mut f64,
        incw: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_dzasum(N: armpl_int_t, X: *const ::std::os::raw::c_void, incX: armpl_int_t)
        -> f64;
}
unsafe extern "C" {
    pub fn cblas_dznrm2(N: armpl_int_t, X: *const ::std::os::raw::c_void, incX: armpl_int_t)
        -> f64;
}
unsafe extern "C" {
    pub fn cblas_hgemm(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: __BindgenFloat16,
        A: *const __BindgenFloat16,
        lda: armpl_int_t,
        B: *const __BindgenFloat16,
        ldb: armpl_int_t,
        beta: __BindgenFloat16,
        C: *mut __BindgenFloat16,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_icamax(
        N: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
    ) -> armpl_int_t;
}
unsafe extern "C" {
    pub fn cblas_idamax(N: armpl_int_t, X: *const f64, incX: armpl_int_t) -> armpl_int_t;
}
unsafe extern "C" {
    pub fn cblas_isamax(N: armpl_int_t, X: *const f32, incX: armpl_int_t) -> armpl_int_t;
}
unsafe extern "C" {
    pub fn cblas_izamax(
        N: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
    ) -> armpl_int_t;
}
unsafe extern "C" {
    pub fn cblas_icamin(
        N: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
    ) -> armpl_int_t;
}
unsafe extern "C" {
    pub fn cblas_idamin(N: armpl_int_t, X: *const f64, incX: armpl_int_t) -> armpl_int_t;
}
unsafe extern "C" {
    pub fn cblas_isamin(N: armpl_int_t, X: *const f32, incX: armpl_int_t) -> armpl_int_t;
}
unsafe extern "C" {
    pub fn cblas_izamin(
        N: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
    ) -> armpl_int_t;
}
unsafe extern "C" {
    pub fn cblas_sasum(N: armpl_int_t, X: *const f32, incX: armpl_int_t) -> f32;
}
unsafe extern "C" {
    pub fn cblas_saxpby(
        N: armpl_int_t,
        alpha: f32,
        X: *const f32,
        incX: armpl_int_t,
        beta: f32,
        Y: *mut f32,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_saxpy(
        N: armpl_int_t,
        alpha: f32,
        X: *const f32,
        incX: armpl_int_t,
        Y: *mut f32,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_scabs1(C: *const ::std::os::raw::c_void) -> f32;
}
unsafe extern "C" {
    pub fn cblas_scasum(N: armpl_int_t, X: *const ::std::os::raw::c_void, incX: armpl_int_t)
        -> f32;
}
unsafe extern "C" {
    pub fn cblas_scnrm2(N: armpl_int_t, X: *const ::std::os::raw::c_void, incX: armpl_int_t)
        -> f32;
}
unsafe extern "C" {
    pub fn cblas_scopy(
        N: armpl_int_t,
        X: *const f32,
        incX: armpl_int_t,
        Y: *mut f32,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_sdot(
        N: armpl_int_t,
        X: *const f32,
        incX: armpl_int_t,
        Y: *const f32,
        incY: armpl_int_t,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_sdsdot(
        N: armpl_int_t,
        alpha: f32,
        X: *const f32,
        incX: armpl_int_t,
        Y: *const f32,
        incY: armpl_int_t,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_sgbmv(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        KL: armpl_int_t,
        KU: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        X: *const f32,
        incX: armpl_int_t,
        beta: f32,
        Y: *mut f32,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_sgemm(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        B: *const f32,
        ldb: armpl_int_t,
        beta: f32,
        C: *mut f32,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_sgemm_batch(
        layout: CBLAS_LAYOUT,
        transA: *const CBLAS_TRANSPOSE,
        transB: *const CBLAS_TRANSPOSE,
        m: *const armpl_int_t,
        n: *const armpl_int_t,
        k: *const armpl_int_t,
        alpha: *const f32,
        A: *const *const f32,
        lda: *const armpl_int_t,
        B: *const *const f32,
        ldb: *const armpl_int_t,
        beta: *const f32,
        C: *const *mut f32,
        ldc: *const armpl_int_t,
        group_count: armpl_int_t,
        group_size: *const armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_sgemmt(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        B: *const f32,
        ldb: armpl_int_t,
        beta: f32,
        C: *mut f32,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_sgemv(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        X: *const f32,
        incX: armpl_int_t,
        beta: f32,
        Y: *mut f32,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_sger(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f32,
        X: *const f32,
        incX: armpl_int_t,
        Y: *const f32,
        incY: armpl_int_t,
        A: *mut f32,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_sgerb(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f32,
        X: *const f32,
        incX: armpl_int_t,
        Y: *const f32,
        incY: armpl_int_t,
        beta: f32,
        A: *mut f32,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_snrm2(N: armpl_int_t, X: *const f32, incX: armpl_int_t) -> f32;
}
unsafe extern "C" {
    pub fn cblas_srot(
        N: armpl_int_t,
        X: *mut f32,
        incX: armpl_int_t,
        Y: *mut f32,
        incY: armpl_int_t,
        c: f32,
        s: f32,
    );
}
unsafe extern "C" {
    pub fn cblas_srotg(a: *mut f32, b: *mut f32, c: *mut f32, s: *mut f32);
}
unsafe extern "C" {
    pub fn cblas_srotm(
        N: armpl_int_t,
        X: *mut f32,
        incX: armpl_int_t,
        Y: *mut f32,
        incY: armpl_int_t,
        P: *const f32,
    );
}
unsafe extern "C" {
    pub fn cblas_srotmg(d1: *mut f32, d2: *mut f32, b1: *mut f32, b2: f32, P: *mut f32);
}
unsafe extern "C" {
    pub fn cblas_ssbmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        X: *const f32,
        incX: armpl_int_t,
        beta: f32,
        Y: *mut f32,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_sscal(N: armpl_int_t, alpha: f32, X: *mut f32, incX: armpl_int_t);
}
unsafe extern "C" {
    pub fn cblas_sspmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f32,
        Ap: *const f32,
        X: *const f32,
        incX: armpl_int_t,
        beta: f32,
        Y: *mut f32,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_sspr(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f32,
        X: *const f32,
        incX: armpl_int_t,
        Ap: *mut f32,
    );
}
unsafe extern "C" {
    pub fn cblas_sspr2(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f32,
        X: *const f32,
        incX: armpl_int_t,
        Y: *const f32,
        incY: armpl_int_t,
        A: *mut f32,
    );
}
unsafe extern "C" {
    pub fn cblas_sswap(
        N: armpl_int_t,
        X: *mut f32,
        incX: armpl_int_t,
        Y: *mut f32,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ssymm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        B: *const f32,
        ldb: armpl_int_t,
        beta: f32,
        C: *mut f32,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ssymv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        X: *const f32,
        incX: armpl_int_t,
        beta: f32,
        Y: *mut f32,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyr(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f32,
        X: *const f32,
        incX: armpl_int_t,
        A: *mut f32,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyr2(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f32,
        X: *const f32,
        incX: armpl_int_t,
        Y: *const f32,
        incY: armpl_int_t,
        A: *mut f32,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyr2k(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        B: *const f32,
        ldb: armpl_int_t,
        beta: f32,
        C: *mut f32,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyrk(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        beta: f32,
        C: *mut f32,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_stbmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        K: armpl_int_t,
        A: *const f32,
        lda: armpl_int_t,
        X: *mut f32,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_stbsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        K: armpl_int_t,
        A: *const f32,
        lda: armpl_int_t,
        X: *mut f32,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_stpmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        Ap: *const f32,
        X: *mut f32,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_stpsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        Ap: *const f32,
        X: *mut f32,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_strmm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        B: *mut f32,
        ldb: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_strmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        A: *const f32,
        lda: armpl_int_t,
        X: *mut f32,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_strsm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: f32,
        A: *const f32,
        lda: armpl_int_t,
        B: *mut f32,
        ldb: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_strsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        A: *const f32,
        lda: armpl_int_t,
        X: *mut f32,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_swaxpby(
        N: armpl_int_t,
        alpha: f32,
        X: *const f32,
        incx: armpl_int_t,
        beta: f32,
        Y: *const f32,
        incy: armpl_int_t,
        W: *mut f32,
        incw: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zaxpby(
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zaxpy(
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zcopy(
        N: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zdotc_sub(
        N: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        dotc: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zdotu_sub(
        N: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        dotu: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zdrot(
        N: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
        c: f64,
        s: f64,
    );
}
unsafe extern "C" {
    pub fn cblas_zdscal(
        N: armpl_int_t,
        alpha: f64,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zgbmv(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        KL: armpl_int_t,
        KU: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemm(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemm3m(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemm_batch(
        layout: CBLAS_LAYOUT,
        transA: *const CBLAS_TRANSPOSE,
        transB: *const CBLAS_TRANSPOSE,
        m: *const armpl_int_t,
        n: *const armpl_int_t,
        k: *const armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const *const ::std::os::raw::c_void,
        lda: *const armpl_int_t,
        B: *const *const ::std::os::raw::c_void,
        ldb: *const armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *const *mut ::std::os::raw::c_void,
        ldc: *const armpl_int_t,
        group_count: armpl_int_t,
        group_size: *const armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemmt(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemv(
        layout: CBLAS_LAYOUT,
        TransA: CBLAS_TRANSPOSE,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zgerbc(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zgerbu(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zgerc(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zgeru(
        layout: CBLAS_LAYOUT,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zhbmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zhemm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zhemv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zher(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f64,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zher2(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        A: *mut ::std::os::raw::c_void,
        lda: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zher2k(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: f64,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zherk(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: f64,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        beta: f64,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zhpmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        Ap: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zhpr(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: f64,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        A: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zhpr2(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *const ::std::os::raw::c_void,
        incY: armpl_int_t,
        Ap: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zrot(
        N: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
        c: f64,
        s: *const ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zrotg(
        a: *mut ::std::os::raw::c_void,
        b: *mut ::std::os::raw::c_void,
        c: *mut f64,
        s: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zscal(
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zswap(
        N: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
        Y: *mut ::std::os::raw::c_void,
        incY: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zsymm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zsyr2k(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *const ::std::os::raw::c_void,
        ldb: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zsyrk(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: armpl_int_t,
        K: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ztbmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        K: armpl_int_t,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ztbsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        K: armpl_int_t,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ztpmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        Ap: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ztpsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        Ap: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrmm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *mut ::std::os::raw::c_void,
        ldb: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrmv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrsm(
        layout: CBLAS_LAYOUT,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: armpl_int_t,
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        B: *mut ::std::os::raw::c_void,
        ldb: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrsv(
        layout: CBLAS_LAYOUT,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: armpl_int_t,
        A: *const ::std::os::raw::c_void,
        lda: armpl_int_t,
        X: *mut ::std::os::raw::c_void,
        incX: armpl_int_t,
    );
}
unsafe extern "C" {
    pub fn cblas_zwaxpby(
        N: armpl_int_t,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incx: armpl_int_t,
        beta: *const ::std::os::raw::c_void,
        Y: *const ::std::os::raw::c_void,
        incy: armpl_int_t,
        W: *mut ::std::os::raw::c_void,
        incw: armpl_int_t,
    );
}
